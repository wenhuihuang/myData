git bash :
	取得git仓库
	----------------------------
	
	初始化一个版本仓库
	git init	

	clone远程版本库
	git clone yourgitaddress(你的git地址)	

	添加远程版本库origin
	git remote add origin yourgitaddress(你的git地址)

	查看远程仓库
	git remote -v

	
	提交修改
	-------------------------------
		
	添加当前修改的文件到暂存区
	git add .

	如果你自动追踪文件，包括你已经手动删除的，状态为deleted的文件
	git add -u

	提交修改
	git commit -m "你的注释"

	推送你的更新到远程服务器,语法为 git push [远程名] [本地分支]:[远程分支]
	git push origin master	

	查看文件状态
	git status

	跟踪新文件
	git add fileName(文件名)

	仅在暂存区删除，保留文件在当前目录，不再跟踪
	git rm --cached fileName(文件名)

	从当前跟踪列表移除文件，并完全删除
	git rm fileName(文件名)

	重命名文件
	git mv 旧文件名 新文件名

	查看提交的历史记录
	git log

	

	基本的分支管理
	------------------------

	创建一个分支
	git branch 分支名

	切换工作目录到 分支
	git checkout 分支名

	将上面的命令合在一起，创建workspace分支并切换到workspace
	git checkout --b 分支名

	
	合并分支，当前工作目录为master
	git merge 分支名

	合并完成后，没有出现冲突，删除合并的分支
	git branch --d 分支名

	拉取远程仓库的数据，语法为git fetch [remote-name]
	git fetch
	
	fetch会拉取最新的远程仓库数据，但不会自动到当前目录下，要自动合并
	git full
	
	查看远程仓库的信息
	git remote show origin